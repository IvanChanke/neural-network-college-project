def print_guide():
    print('+---------------------------------------------+')
    print('|{: ^45}|'.format('GUIDE'))
    print('+---------------------------------------------+')
    print('|{: <45}|'.format('As a part of my college project'))
    print('|{: <45}|'.format('I have developed a Python module'))
    print('|{: <45}|'.format('which implements a multi-layer p-tron model.'))
    print('|{: <45}|'.format('This application allows you to test'))
    print('|{: <45}|'.format('the module on various tasks'))
    print('|{: <45}|'.format('the user-friendly way'))
    print('|{: <45}|'.format('(Or at least that was the idea).'))
    print('|{: <45}|'.format('For now, the tasks include logic gates,'))
    print('|{: <45}|'.format('such as AND, OR and XOR.'))
    print('|{: <45}|'.format('All the output this program produces'))
    print('|{: <45}|'.format('is printed here, in the console.'))
    print('|{: <45}|'.format('You can interact with the program using'))
    print('|{: <45}|'.format('the graphic interface window.'))
    print('+---------------------------------------------+')
    print('|{: ^45}|'.format('THE MAIN MENU'))
    print('+---------------------------------------------+')
    print('|{: <45}|'.format('Under the clock you can see a status bar'))
    print('|{: <45}|'.format('which displays the title of the loaded model.'))
    print('|{: <45}|'.format('When you start the program, there is no model'))
    print('|{: <45}|'.format('pre-loaded which is stated in the status bar.'))
    print('|{: <45}|'.format('To load a model or to save the current one'))
    print('|{: <45}|'.format('click "Files".'))
    print('|{: <45}|'.format('To create a new model click "New Model"'))
    print('|{: <45}|'.format('The buttons at the bottom of the screen'))
    print('|{: <45}|'.format('let you train and test the model. '))
    print('+---------------------------------------------+')
    print('|{: ^45}|'.format('INITIALIZING MODELS'))
    print('+---------------------------------------------+')
    print('|{: <45}|'.format('"New Model" menu lets you initialize'))
    print('|{: <45}|'.format('new models using presets aimed at specific'))
    print('|{: <45}|'.format('tasks (recreating logic gates in this case).'))
    print('|{: <45}|'.format('After you have selected the preset you can'))
    print('|{: <45}|'.format('train and test the model.'))
    print('+---------------------------------------------+')
    print('|{: ^45}|'.format('SAVING/LOADING'))
    print('+---------------------------------------------+')
    print('|{: <45}|'.format('Go to "Files" menu, enter the name of'))
    print('|{: <45}|'.format('the model you would like to load and click'))
    print('|{: <45}|'.format('"Get Model". To save a model, enter any name'))
    print('|{: <45}|'.format('you wish and click "Save Model".'))
    print('|{: <45}|'.format('Take notice that any model you wish to load'))
    print('|{: <45}|'.format('must share the same folder with this app.'))
    print('+---------------------------------------------+')
    print('|{: ^45}|'.format('TRAINING'))
    print('+---------------------------------------------+')
    print('|{: <45}|'.format('This is where it gets interesting.'))
    print('|{: <45}|'.format('Press "Train" and you will see a page'))
    print('|{: <45}|'.format('which lets you execute the training'))
    print('|{: <45}|'.format('process. You do not have to worry about'))
    print('|{: <45}|'.format('training data in this version of the app'))
    print('|{: <45}|'.format('since each preset has appropriate training'))
    print('|{: <45}|'.format('data already programmed in.'))
    print('|{: <45}|'.format('It should come as no surprise that this'))
    print('|{: <45}|'.format('data is quite simple: just a truth table'))
    print('|{: <45}|'.format('corresponding to the logic gate.'))
    print('|{: <45}|'.format('This table runs through the algorithm'))
    print('|{: <45}|'.format('with each learning iteration.'))
    print('|{: <45}|'.format('I hope you are familiar with the concepts'))
    print('|{: <45}|'.format('of MSE and learning rate. In case you are'))
    print('|{: <45}|'.format('not, go google it. The "Train" page'))
    print('|{: <45}|'.format('allows you to set the rate, just enter it'))
    print('|{: <45}|'.format('and click the corresponding button.'))
    print('|{: <45}|'.format('To execute the training process you need'))
    print('|{: <45}|'.format('to enter the number of iterations'))
    print('|{: <45}|'.format('you want to do at once and click the button.'))
    print('|{: <45}|'.format('The GUI will freeze and you will be able to '))
    print('|{: <45}|'.format('witness the outputs the net produces at each'))
    print('|{: <45}|'.format('learning iteration along with the MSE.'))
    print('|{: <45}|'.format('You will also see the final MSE after each'))
    print('|{: <45}|'.format('handful of iterations you run at once.'))
    print('|{: <45}|'.format('And you can "Reset" the model - clicking'))
    print('|{: <45}|'.format('the button will reinitialize it.'))
    print('+---------------------------------------------+')
    print('|{: ^45}|'.format('TESTING'))
    print('+---------------------------------------------+')
    print('|{: <45}|'.format('Testing the model is simple.'))
    print('|{: <45}|'.format('Firstly, check that the model is loaded.'))
    print('|{: <45}|'.format('Click "Query" then select what signal'))
    print('|{: <45}|'.format('you wish to send. You will see the output'))
    print('|{: <45}|'.format('printed in the console.'))
    print('+---------------------------------------------+')

def show_greeting():

    print('+---------------------------------------------+')
    print('|{: <45}|'.format('NeuralNetProject'))
    print('+---------------------------------------------+')
    print('|{: <45}|'.format('Copyright Ivan Chanke 2020'))

    print('+---------------------------------------------+')
    print('|{: <45}|'.format('Use the graphic interface to interact'))
    print('|{: <45}|'.format('User guide is available from the main screen'))
    print('+---------------------------------------------+')
